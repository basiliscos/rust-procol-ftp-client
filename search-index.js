var searchIndex = {};
searchIndex["protocol_ftp_client"] = {"doc":"","items":[[3,"RemoteFile","protocol_ftp_client","Represents single item parsed `LIST` command.",null,null],[12,"kind","","",0,null],[12,"size","","",0,null],[12,"name","","",0,null],[3,"FtpReceiver","","&quot;Passive&quot; side of FTP protocol, which mean that receiver expects\nsome data from remote server. As soon as it receives enough data\nit can &quot;advance&quot; to transmitter state, i.e. fill buffer with\ncommands to be further sent to the remote server.",null,null],[3,"FtpTransmitter","","&quot;Active&quot; side of FTP protocol, i.e. fill buffer with desired\nFTP commands for further delivery to remote server.",null,null],[4,"DataMode","","Defines data transfer mode: binary (aka image) or text.",null,null],[13,"Binary","","",1,null],[13,"Text","","",1,null],[4,"RemoteFileKind","","Defines files type for parsed `LIST` command.",null,null],[13,"File","","",2,null],[13,"Directory","","",2,null],[4,"FtpError","","Error occured in parsing FTP data.",null,null],[13,"NotEnoughData","","No enough data has been provided.",3,null],[13,"ProtocolError","","Protocol error occur, i.e. got `A` while expected `B`.",3,null],[13,"GarbageData","","Some meaningless data.",3,null],[13,"AuthFailed","","Failed to authenticate.",3,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"new","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"try_advance","","Try to consume `Receiver` by parsing buffer and advance into `Transmitter`.\nIn the case of an error, it returns unmodified `Receiver` as the error. The\nactually happened error can be obtained via `take_error`.",4,null],[11,"take_error","","Returns tha last occurred error, and internally\nsets up `None`.",4,null],[11,"to_transmitter","","Sometimes you need to manually advance to `Transmitter`\ne.g. in case of Authorization Error, you can re-send\nother credentials.",4,null],[11,"to_receiver","","Sometimes you need to manually advance to `Receiver`\ne.g. in case of `LIST` or file get commands, servers sends\nstart data transfer and end data transfer responses.",5,null],[11,"send_login","","Fills the output buffer with the login command (takes `login` string argument ),\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"send_password","","Fills the output buffer with the password command (takes `password` string argument ),\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"send_pwd_req","","Fills the output buffer with the PWD command (take current working directory on remote server),\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"get_wd","","Returns current working directory. Assumes either that  `send_pwd_req` or `send_cwd_req`\nhas been sent and succeeded.",5,null],[11,"send_type_req","","Fills the output buffer with the data transfer mode request (binary or text),\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"get_type","","Returns current data mode. Assumes either that  `send_type_req`\nhas been sent and succeeded.",5,null],[11,"send_system_req","","Fills the output buffer with the remote system request;\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"get_system","","Returns remote system with subtype. Assumes either that `send_system_req`\nhas been sent and succeeded.",5,null],[11,"send_pasv_req","","Fills the output buffer with the PASS requests to allow further data transfer (`LIST` or get file)\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"send_get_req","","Fills the output buffer with get remove file command (takes `path` string argument ),\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"send_cwd_req","","Fills the output buffer with change remote working directory command (takes `path` string argument ),\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"take_endpoint","","Takes pair of IP-address and port, where TCP-connection can be opened to.\nAssumes `send_pasv_req` has been invoked before.",5,null],[11,"send_list_req","","Fills the output buffer with `LIST` command to get directory listing of current remote working directory;\nmodifies `count` variable with the count of written bytes and returns `FtpReceiver`.",5,null],[11,"parse_list","","Parses remote directory listing, requested by `send_list_req` command.",5,null]],"paths":[[3,"RemoteFile"],[4,"DataMode"],[4,"RemoteFileKind"],[4,"FtpError"],[3,"FtpReceiver"],[3,"FtpTransmitter"]]};
initSearch(searchIndex);
